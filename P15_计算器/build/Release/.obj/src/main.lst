C51 COMPILER V9.60.7.0   MAIN                                                              04/20/2025 16:59:26 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Release\.obj\src\main.o
COMPILER INVOKED BY: E:\Program Files\Keil_v5\C51\BIN\C51.exe .\src\main.c OMF2 TABS(4) CODE NOCOND SYMBOLS PRINT(.\buil
                    -d\Release\.obj\src\main.lst) INCDIR(../../../Program Files/Keil_v5/C51/INC;src;src/Com;src/Dri;src/Int) DEFINE(__UVISION
                    -_VERSION=526) OPTIMIZE(8,SPEED) SMALL ROM(LARGE) OBJECT(.\build\Release\.obj\src\main.o)

line level    source

   1          #include "STC89C5XRC.H"
   2          #include "Int_Digtal.h"
   3          #include "Int_MatrixKey.h"
   4          
   5          unsigned long g_num1 = 0, g_num2 = 0, g_result = 0;
   6          unsigned char g_op = 0;
   7          
   8          //输入数字0~9
   9          void IntputNum(unsigned char num)
  10          {
  11   1        //当操作符
  12   1        if(g_op == 0)
  13   1        {
  14   2          g_num1 *= 10;
  15   2          g_num1 += num;
  16   2          g_result = g_num1;
  17   2          Int_Digtal_SetCache(g_num1);
  18   2        }
  19   1        else
  20   1        {
  21   2          g_num2 *= 10;
  22   2          g_num2 += num;
  23   2          Int_Digtal_SetCache(g_num2);
  24   2        }
  25   1      }
  26          
  27          void InputEq()
  28          {
  29   1        if(g_op == 10)
  30   1        {
  31   2          g_result += g_num2;
  32   2        }
  33   1        else if(g_op == 20)
  34   1        {
  35   2          g_result -= g_num2;
  36   2        }
  37   1        else if(g_op == 30)
  38   1        {
  39   2          g_result *= g_num2;
  40   2        }
  41   1        else if(g_op == 40)
  42   1        {
  43   2          g_result /= g_num2;
  44   2        }
  45   1        Int_Digtal_SetCache(g_result);
  46   1        g_op = 0;
  47   1      }
  48          
  49          void IntputOp(unsigned char op)
  50          {
  51   1        InputEq();
  52   1        g_op = op;
  53   1        g_num2 = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              04/20/2025 16:59:26 PAGE 2   

  54   1        g_num1 = 0;
  55   1      }
  56          
  57          void InputC()
  58          {
  59   1        g_num1 = 0;
  60   1        g_num2 = 0;
  61   1        g_result = 0;
  62   1        g_op = 0;
  63   1        Int_Digtal_SetCache(0);
  64   1      }
  65          
  66          void main()
  67          {
  68   1        unsigned char idx;
  69   1        SMG_EN = 0; //SMG_EN 低电平有效
  70   1        LED_EN = 0; //LED_EN 高电平有效
  71   1        while(1)
  72   1        {
  73   2          idx = Int_MatrixKey_GetPressedKey();
  74   2          if(idx != 255)
  75   2          {
  76   3            if(idx >=0 && idx <=9)
  77   3            {
  78   4              IntputNum(idx);
  79   4            }
  80   3            else if(idx >= 10 && idx <= 40)
  81   3            {
  82   4              IntputOp(idx);
  83   4            }
  84   3            else if(idx == 50)
  85   3            {
  86   4              InputC();
  87   4            }
  88   3            else if(idx == 60)
  89   3            {
  90   4              InputEq();
  91   4            }
  92   3          }
  93   2          Int_Digtal_FlushDigtal();
  94   2        }
  95   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              04/20/2025 16:59:26 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _IntputNum (BEGIN)
                                           ; SOURCE LINE # 9
0000 8F00        R     MOV     num,R7
                                           ; SOURCE LINE # 10
                                           ; SOURCE LINE # 12
0002 E500        R     MOV     A,g_op
0004 7044              JNZ     ?C0001
                                           ; SOURCE LINE # 13
                                           ; SOURCE LINE # 14
0006 AF00        R     MOV     R7,g_num1+03H
0008 AE00        R     MOV     R6,g_num1+02H
000A AD00        R     MOV     R5,g_num1+01H
000C AC00        R     MOV     R4,g_num1
000E 7B0A              MOV     R3,#0AH
0010 FA                MOV     R2,A
0011 F9                MOV     R1,A
0012 F8                MOV     R0,A
0013 120000      E     LCALL   ?C?LMUL
0016 8F00        R     MOV     g_num1+03H,R7
0018 8E00        R     MOV     g_num1+02H,R6
001A 8D00        R     MOV     g_num1+01H,R5
001C 8C00        R     MOV     g_num1,R4
                                           ; SOURCE LINE # 15
001E E4                CLR     A
001F FC                MOV     R4,A
0020 FD                MOV     R5,A
0021 FE                MOV     R6,A
0022 E500        R     MOV     A,g_num1+03H
0024 2500        R     ADD     A,num
0026 F500        R     MOV     g_num1+03H,A
0028 EE                MOV     A,R6
0029 3500        R     ADDC    A,g_num1+02H
002B F500        R     MOV     g_num1+02H,A
002D ED                MOV     A,R5
002E 3500        R     ADDC    A,g_num1+01H
0030 F500        R     MOV     g_num1+01H,A
0032 EC                MOV     A,R4
0033 3500        R     ADDC    A,g_num1
0035 F500        R     MOV     g_num1,A
                                           ; SOURCE LINE # 16
0037 850000      R     MOV     g_result+03H,g_num1+03H
003A 850000      R     MOV     g_result+02H,g_num1+02H
003D 850000      R     MOV     g_result+01H,g_num1+01H
0040 F500        R     MOV     g_result,A
                                           ; SOURCE LINE # 17
0042 AF00        R     MOV     R7,g_num1+03H
0044 AE00        R     MOV     R6,g_num1+02H
0046 AD00        R     MOV     R5,g_num1+01H
                                           ; SOURCE LINE # 18
0048 8038              SJMP    ?C0025
004A         ?C0001:
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 21
004A AF00        R     MOV     R7,g_num2+03H
004C AE00        R     MOV     R6,g_num2+02H
004E AD00        R     MOV     R5,g_num2+01H
0050 AC00        R     MOV     R4,g_num2
0052 E4                CLR     A
0053 7B0A              MOV     R3,#0AH
C51 COMPILER V9.60.7.0   MAIN                                                              04/20/2025 16:59:26 PAGE 4   

0055 FA                MOV     R2,A
0056 F9                MOV     R1,A
0057 F8                MOV     R0,A
0058 120000      E     LCALL   ?C?LMUL
005B 8F00        R     MOV     g_num2+03H,R7
005D 8E00        R     MOV     g_num2+02H,R6
005F 8D00        R     MOV     g_num2+01H,R5
0061 8C00        R     MOV     g_num2,R4
                                           ; SOURCE LINE # 22
0063 E4                CLR     A
0064 FC                MOV     R4,A
0065 FD                MOV     R5,A
0066 FE                MOV     R6,A
0067 E500        R     MOV     A,g_num2+03H
0069 2500        R     ADD     A,num
006B F500        R     MOV     g_num2+03H,A
006D EE                MOV     A,R6
006E 3500        R     ADDC    A,g_num2+02H
0070 F500        R     MOV     g_num2+02H,A
0072 ED                MOV     A,R5
0073 3500        R     ADDC    A,g_num2+01H
0075 F500        R     MOV     g_num2+01H,A
0077 EC                MOV     A,R4
0078 3500        R     ADDC    A,g_num2
007A F500        R     MOV     g_num2,A
                                           ; SOURCE LINE # 23
007C AF00        R     MOV     R7,g_num2+03H
007E AE00        R     MOV     R6,g_num2+02H
0080 AD00        R     MOV     R5,g_num2+01H
0082         ?C0025:
0082 FC                MOV     R4,A
0083 120000      E     LCALL   _Int_Digtal_SetCache
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 25
0086         ?C0003:
0086 22                RET     
             ; FUNCTION _IntputNum (END)

             ; FUNCTION InputEq (BEGIN)
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
                                           ; SOURCE LINE # 29
0000 E500        R     MOV     A,g_op
0002 B40A1A            CJNE    A,#0AH,?C0004
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
0005 E500        R     MOV     A,g_result+03H
0007 2500        R     ADD     A,g_num2+03H
0009 F500        R     MOV     g_result+03H,A
000B E500        R     MOV     A,g_result+02H
000D 3500        R     ADDC    A,g_num2+02H
000F F500        R     MOV     g_result+02H,A
0011 E500        R     MOV     A,g_result+01H
0013 3500        R     ADDC    A,g_num2+01H
0015 F500        R     MOV     g_result+01H,A
0017 E500        R     MOV     A,g_result
0019 3500        R     ADDC    A,g_num2
001B F500        R     MOV     g_result,A
                                           ; SOURCE LINE # 32
001D 805A              SJMP    ?C0005
001F         ?C0004:
                                           ; SOURCE LINE # 33
C51 COMPILER V9.60.7.0   MAIN                                                              04/20/2025 16:59:26 PAGE 5   

001F E500        R     MOV     A,g_op
0021 B4141B            CJNE    A,#014H,?C0006
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 35
0024 C3                CLR     C
0025 E500        R     MOV     A,g_result+03H
0027 9500        R     SUBB    A,g_num2+03H
0029 F500        R     MOV     g_result+03H,A
002B E500        R     MOV     A,g_result+02H
002D 9500        R     SUBB    A,g_num2+02H
002F F500        R     MOV     g_result+02H,A
0031 E500        R     MOV     A,g_result+01H
0033 9500        R     SUBB    A,g_num2+01H
0035 F500        R     MOV     g_result+01H,A
0037 E500        R     MOV     A,g_result
0039 9500        R     SUBB    A,g_num2
003B F500        R     MOV     g_result,A
                                           ; SOURCE LINE # 36
003D 803A              SJMP    ?C0005
003F         ?C0006:
                                           ; SOURCE LINE # 37
003F E500        R     MOV     A,g_op
0041 B41E15            CJNE    A,#01EH,?C0008
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 39
0044 AF00        R     MOV     R7,g_result+03H
0046 AE00        R     MOV     R6,g_result+02H
0048 AD00        R     MOV     R5,g_result+01H
004A AC00        R     MOV     R4,g_result
004C AB00        R     MOV     R3,g_num2+03H
004E AA00        R     MOV     R2,g_num2+02H
0050 A900        R     MOV     R1,g_num2+01H
0052 A800        R     MOV     R0,g_num2
0054 120000      E     LCALL   ?C?LMUL
                                           ; SOURCE LINE # 40
0057 8018              SJMP    ?C0026
0059         ?C0008:
                                           ; SOURCE LINE # 41
0059 E500        R     MOV     A,g_op
005B B4281B            CJNE    A,#028H,?C0005
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
005E AF00        R     MOV     R7,g_result+03H
0060 AE00        R     MOV     R6,g_result+02H
0062 AD00        R     MOV     R5,g_result+01H
0064 AC00        R     MOV     R4,g_result
0066 AB00        R     MOV     R3,g_num2+03H
0068 AA00        R     MOV     R2,g_num2+02H
006A A900        R     MOV     R1,g_num2+01H
006C A800        R     MOV     R0,g_num2
006E 120000      E     LCALL   ?C?ULDIV
0071         ?C0026:
0071 8F00        R     MOV     g_result+03H,R7
0073 8E00        R     MOV     g_result+02H,R6
0075 8D00        R     MOV     g_result+01H,R5
0077 8C00        R     MOV     g_result,R4
                                           ; SOURCE LINE # 44
0079         ?C0005:
                                           ; SOURCE LINE # 45
0079 AF00        R     MOV     R7,g_result+03H
007B AE00        R     MOV     R6,g_result+02H
007D AD00        R     MOV     R5,g_result+01H
C51 COMPILER V9.60.7.0   MAIN                                                              04/20/2025 16:59:26 PAGE 6   

007F AC00        R     MOV     R4,g_result
0081 120000      E     LCALL   _Int_Digtal_SetCache
                                           ; SOURCE LINE # 46
0084 E4                CLR     A
0085 F500        R     MOV     g_op,A
                                           ; SOURCE LINE # 47
0087 22                RET     
             ; FUNCTION InputEq (END)

             ; FUNCTION _IntputOp (BEGIN)
                                           ; SOURCE LINE # 49
0000 8F00        R     MOV     op,R7
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
0002 120000      R     LCALL   InputEq
                                           ; SOURCE LINE # 52
0005 850000      R     MOV     g_op,op
                                           ; SOURCE LINE # 53
0008 E4                CLR     A
0009 F500        R     MOV     g_num2+03H,A
000B F500        R     MOV     g_num2+02H,A
000D F500        R     MOV     g_num2+01H,A
000F F500        R     MOV     g_num2,A
                                           ; SOURCE LINE # 54
0011 F500        R     MOV     g_num1+03H,A
0013 F500        R     MOV     g_num1+02H,A
0015 F500        R     MOV     g_num1+01H,A
0017 F500        R     MOV     g_num1,A
                                           ; SOURCE LINE # 55
0019 22                RET     
             ; FUNCTION _IntputOp (END)

             ; FUNCTION InputC (BEGIN)
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
0000 E4                CLR     A
0001 F500        R     MOV     g_num1+03H,A
0003 F500        R     MOV     g_num1+02H,A
0005 F500        R     MOV     g_num1+01H,A
0007 F500        R     MOV     g_num1,A
                                           ; SOURCE LINE # 60
0009 F500        R     MOV     g_num2+03H,A
000B F500        R     MOV     g_num2+02H,A
000D F500        R     MOV     g_num2+01H,A
000F F500        R     MOV     g_num2,A
                                           ; SOURCE LINE # 61
0011 F500        R     MOV     g_result+03H,A
0013 F500        R     MOV     g_result+02H,A
0015 F500        R     MOV     g_result+01H,A
0017 F500        R     MOV     g_result,A
                                           ; SOURCE LINE # 62
0019 F500        R     MOV     g_op,A
                                           ; SOURCE LINE # 63
001B FF                MOV     R7,A
001C FE                MOV     R6,A
001D FD                MOV     R5,A
001E FC                MOV     R4,A
001F 020000      E     LJMP    _Int_Digtal_SetCache
             ; FUNCTION InputC (END)

             ; FUNCTION main (BEGIN)
C51 COMPILER V9.60.7.0   MAIN                                                              04/20/2025 16:59:26 PAGE 7   

                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 69
0000 C2B6              CLR     P36
                                           ; SOURCE LINE # 70
0002 C2B4              CLR     P34
0004         ?C0014:
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
0004 120000      E     LCALL   Int_MatrixKey_GetPressedKey
0007 8F00        R     MOV     idx,R7
                                           ; SOURCE LINE # 74
0009 E500        R     MOV     A,idx
000B F4                CPL     A
000C 603A              JZ      ?C0016
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
000E E500        R     MOV     A,idx
0010 C3                CLR     C
0011 9400              SUBB    A,#00H
0013 400C              JC      ?C0017
0015 E500        R     MOV     A,idx
0017 D3                SETB    C
0018 9409              SUBB    A,#09H
001A 5005              JNC     ?C0017
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
001C 120000      R     LCALL   _IntputNum
                                           ; SOURCE LINE # 79
001F 8027              SJMP    ?C0016
0021         ?C0017:
                                           ; SOURCE LINE # 80
0021 E500        R     MOV     A,idx
0023 C3                CLR     C
0024 940A              SUBB    A,#0AH
0026 400E              JC      ?C0019
0028 E500        R     MOV     A,idx
002A D3                SETB    C
002B 9428              SUBB    A,#028H
002D 5007              JNC     ?C0019
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
002F AF00        R     MOV     R7,idx
0031 120000      R     LCALL   _IntputOp
                                           ; SOURCE LINE # 83
0034 8012              SJMP    ?C0016
0036         ?C0019:
                                           ; SOURCE LINE # 84
0036 E500        R     MOV     A,idx
0038 B43205            CJNE    A,#032H,?C0021
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
003B 120000      R     LCALL   InputC
                                           ; SOURCE LINE # 87
003E 8008              SJMP    ?C0016
0040         ?C0021:
                                           ; SOURCE LINE # 88
0040 E500        R     MOV     A,idx
0042 B43C03            CJNE    A,#03CH,?C0016
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
C51 COMPILER V9.60.7.0   MAIN                                                              04/20/2025 16:59:26 PAGE 8   

0045 120000      R     LCALL   InputEq
                                           ; SOURCE LINE # 91
                                           ; SOURCE LINE # 92
0048         ?C0016:
                                           ; SOURCE LINE # 93
0048 120000      E     LCALL   Int_Digtal_FlushDigtal
                                           ; SOURCE LINE # 94
004B 80B7              SJMP    ?C0014
             ; FUNCTION main (END)

C51 COMPILER V9.60.7.0   MAIN                                                              04/20/2025 16:59:26 PAGE 9   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
XICON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
P4 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
ISP_TRIG . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E6H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
EC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AEH  1
FE . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
ISP_CMD. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E5H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
Int_Digtal_FlushDigtal . . . . . . . .  EXTERN   CODE   PROC     -----  -----
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  idx. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
g_op . . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0000H  1
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
P00. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0080H  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
P10. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
P01. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0081H  1
P20. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
P11. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
P02. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0082H  1
ISP_ADDRH. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E3H  1
P30. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
P21. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A1H  1
P12. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0092H  1
P03. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0083H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
P31. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
P22. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A2H  1
P13. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0093H  1
P04. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0084H  1
C51 COMPILER V9.60.7.0   MAIN                                                              04/20/2025 16:59:26 PAGE 10  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P40. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E8H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
P32. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
P23. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A3H  1
P14. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0094H  1
P05. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0085H  1
P41. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E9H  1
P33. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
P24. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A4H  1
P15. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0095H  1
P06. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0086H  1
ISP_ADDRL. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E4H  1
P42. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EAH  1
P34. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
P25. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
P16. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0096H  1
P07. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0087H  1
P43. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EBH  1
P35. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
P26. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A6H  1
P17. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0097H  1
P44. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ECH  1
P36. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
P27. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
P45. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EDH  1
_IntputNum . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  num. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
Int_MatrixKey_GetPressedKey. . . . . .  EXTERN   CODE   PROC     -----  -----
P37. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
P46. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EEH  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
AUXR . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008EH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
_IntputOp. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  op . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
InputEq. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
g_num1 . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_LONG   0001H  4
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
g_num2 . . . . . . . . . . . . . . . .  PUBLIC   DATA   U_LONG   0005H  4
_Int_Digtal_SetCache . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
C51 COMPILER V9.60.7.0   MAIN                                                              04/20/2025 16:59:26 PAGE 11  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
ISP_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E7H  1
InputC . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
WDT_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E1H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
IPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B7H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2MOD. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C9H  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
ISP_DATA . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E2H  1
g_result . . . . . . . . . . . . . . .  PUBLIC   DATA   U_LONG   0009H  4
SADEN. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B9H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
SADDR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A9H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
AUXR1. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A2H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
F1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D1H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    408    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
