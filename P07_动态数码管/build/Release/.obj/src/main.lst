C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2025 14:13:23 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Release\.obj\src\main.o
COMPILER INVOKED BY: E:\Program Files\Keil_v5\C51\BIN\C51.exe .\src\main.c OMF2 TABS(4) CODE NOCOND SYMBOLS PRINT(.\buil
                    -d\Release\.obj\src\main.lst) INCDIR(../../../Program Files/Keil_v5/C51/INC) DEFINE(__UVISION_VERSION=526) OPTIMIZE(8,SPE
                    -ED) SMALL ROM(LARGE) OBJECT(.\build\Release\.obj\src\main.o)

line level    source

   1          #include "STC89C5XRC.H"
   2          #define SMG_EN P36
   3          #define LED_EN P34
   4          
   5          //数码管显示数组
   6          unsigned char digtal_codes[10] = {
   7            0x3F,//0
   8            0x06,//1
   9            0x5B,//2
  10            0x4F,//3
  11            0x66,//4
  12            0x6D,//5
  13            0x7D,//6
  14            0x07,//7
  15            0x7F,//8
  16            0x6F//9
  17          };
  18          
  19          unsigned char buff[8];
  20          void DisplaySingle(unsigned char n, unsigned char num)
  21          {
  22   1        P0 = 0;
  23   1        //片选
  24   1        //将P13，P14，P15清零
  25   1        P1 &= 0xC7;
  26   1        //设置P13，P14，P15的值
  27   1        P1 |= (n << 3);
  28   1        
  29   1        //段选
  30   1        P0 = num;
  31   1      }
  32          
  33          void ShowDigtalNum(unsigned long num)
  34          {
  35   1        unsigned char i = 7, j;
  36   1        if(num == 0)
  37   1        {
  38   2          DisplaySingle(i, digtal_codes[num]);
  39   2          return;
  40   2        }
  41   1        while(num != 0)
  42   1        {
  43   2          j = num % 10;
  44   2          DisplaySingle(i, digtal_codes[j]);
  45   2          i--;
  46   2          num /= 10;
  47   2        }
  48   1      }
  49          
  50          void SetCache(unsigned long num)
  51          {
  52   1        unsigned char i;
  53   1        for(i = 0; i < 8; i++)
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2025 14:13:23 PAGE 2   

  54   1        {
  55   2          buff[i] = 0x00;
  56   2        }
  57   1        if(num == 0)
  58   1        {
  59   2          buff[7] = digtal_codes[0];
  60   2          return;
  61   2        }
  62   1        i = 7;
  63   1        while(num != 0)
  64   1        {
  65   2          buff[i] = digtal_codes[num % 10];
  66   2          num /= 10;
  67   2          i--;
  68   2        }
  69   1      }
  70          
  71          void FlushDigtal()
  72          {
  73   1        unsigned char i;
  74   1        for(i = 0; i < 8; i++)
  75   1        {
  76   2          DisplaySingle(i, buff[i]);
  77   2        }
  78   1      }
  79          
  80          void main()
  81          {
  82   1          // unsigned char i = 3;
  83   1          SMG_EN = 0; //SMG_EN 低电平有效
  84   1          LED_EN = 0; //LED_EN 高电平有效
  85   1          SetCache(12345);
  86   1          while(1)
  87   1          {
  88   2            FlushDigtal();
  89   2          }
  90   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2025 14:13:23 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _DisplaySingle (BEGIN)
                                           ; SOURCE LINE # 20
;---- Variable 'num' assigned to Register 'R5' ----
;---- Variable 'n' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 21
                                           ; SOURCE LINE # 22
0000 E4                CLR     A
0001 F580              MOV     P0,A
                                           ; SOURCE LINE # 25
0003 5390C7            ANL     P1,#0C7H
                                           ; SOURCE LINE # 27
0006 EF                MOV     A,R7
0007 33                RLC     A
0008 33                RLC     A
0009 33                RLC     A
000A 54F8              ANL     A,#0F8H
000C 4290              ORL     P1,A
                                           ; SOURCE LINE # 30
000E 8D80              MOV     P0,R5
                                           ; SOURCE LINE # 31
0010 22                RET     
             ; FUNCTION _DisplaySingle (END)

             ; FUNCTION _ShowDigtalNum (BEGIN)
                                           ; SOURCE LINE # 33
0000 8F00        R     MOV     num+03H,R7
0002 8E00        R     MOV     num+02H,R6
0004 8D00        R     MOV     num+01H,R5
0006 8C00        R     MOV     num,R4
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 35
0008 750007      R     MOV     i,#07H
                                           ; SOURCE LINE # 36
000B E4                CLR     A
000C FF                MOV     R7,A
000D FE                MOV     R6,A
000E FD                MOV     R5,A
000F FC                MOV     R4,A
0010 AB00        R     MOV     R3,num+03H
0012 AA00        R     MOV     R2,num+02H
0014 A900        R     MOV     R1,num+01H
0016 A800        R     MOV     R0,num
0018 C3                CLR     C
0019 120000      E     LCALL   ?C?ULCMP
001C 700C              JNZ     ?C0004
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
001E 7400        R     MOV     A,#LOW digtal_codes
0020 2500        R     ADD     A,num+03H
0022 F8                MOV     R0,A
0023 E6                MOV     A,@R0
0024 FD                MOV     R5,A
0025 AF00        R     MOV     R7,i
0027 020000      R     LJMP    _DisplaySingle
                                           ; SOURCE LINE # 40
002A         ?C0004:
                                           ; SOURCE LINE # 41
002A E4                CLR     A
002B FF                MOV     R7,A
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2025 14:13:23 PAGE 4   

002C FE                MOV     R6,A
002D FD                MOV     R5,A
002E FC                MOV     R4,A
002F AB00        R     MOV     R3,num+03H
0031 AA00        R     MOV     R2,num+02H
0033 A900        R     MOV     R1,num+01H
0035 A800        R     MOV     R0,num
0037 C3                CLR     C
0038 120000      E     LCALL   ?C?ULCMP
003B 603D              JZ      ?C0003
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
003D E4                CLR     A
003E 7B0A              MOV     R3,#0AH
0040 FA                MOV     R2,A
0041 F9                MOV     R1,A
0042 F8                MOV     R0,A
0043 AF00        R     MOV     R7,num+03H
0045 AE00        R     MOV     R6,num+02H
0047 AD00        R     MOV     R5,num+01H
0049 AC00        R     MOV     R4,num
004B 120000      E     LCALL   ?C?ULDIV
004E AF03              MOV     R7,AR3
0050 8F00        R     MOV     j,R7
                                           ; SOURCE LINE # 44
0052 7400        R     MOV     A,#LOW digtal_codes
0054 2F                ADD     A,R7
0055 F8                MOV     R0,A
0056 E6                MOV     A,@R0
0057 FD                MOV     R5,A
0058 AF00        R     MOV     R7,i
005A 120000      R     LCALL   _DisplaySingle
                                           ; SOURCE LINE # 45
005D 1500        R     DEC     i
                                           ; SOURCE LINE # 46
005F AF00        R     MOV     R7,num+03H
0061 AE00        R     MOV     R6,num+02H
0063 AD00        R     MOV     R5,num+01H
0065 AC00        R     MOV     R4,num
0067 E4                CLR     A
0068 7B0A              MOV     R3,#0AH
006A FA                MOV     R2,A
006B F9                MOV     R1,A
006C F8                MOV     R0,A
006D 120000      E     LCALL   ?C?ULDIV
0070 8F00        R     MOV     num+03H,R7
0072 8E00        R     MOV     num+02H,R6
0074 8D00        R     MOV     num+01H,R5
0076 8C00        R     MOV     num,R4
                                           ; SOURCE LINE # 47
0078 80B0              SJMP    ?C0004
                                           ; SOURCE LINE # 48
007A         ?C0003:
007A 22                RET     
             ; FUNCTION _ShowDigtalNum (END)

             ; FUNCTION _SetCache (BEGIN)
                                           ; SOURCE LINE # 50
0000 8F00        R     MOV     num+03H,R7
0002 8E00        R     MOV     num+02H,R6
0004 8D00        R     MOV     num+01H,R5
0006 8C00        R     MOV     num,R4
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2025 14:13:23 PAGE 5   

                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 53
0008 E4                CLR     A
0009 F500        R     MOV     i,A
000B         ?C0006:
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 55
000B 7400        R     MOV     A,#LOW buff
000D 2500        R     ADD     A,i
000F F8                MOV     R0,A
0010 E4                CLR     A
0011 F6                MOV     @R0,A
                                           ; SOURCE LINE # 56
0012 0500        R     INC     i
0014 E500        R     MOV     A,i
0016 B408F2            CJNE    A,#08H,?C0006
0019         ?C0007:
                                           ; SOURCE LINE # 57
0019 E4                CLR     A
001A FF                MOV     R7,A
001B FE                MOV     R6,A
001C FD                MOV     R5,A
001D FC                MOV     R4,A
001E AB00        R     MOV     R3,num+03H
0020 AA00        R     MOV     R2,num+02H
0022 A900        R     MOV     R1,num+01H
0024 A800        R     MOV     R0,num
0026 C3                CLR     C
0027 120000      E     LCALL   ?C?ULCMP
002A 7004              JNZ     ?C0009
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
002C 850000      R     MOV     buff+07H,digtal_codes
002F 22                RET     
                                           ; SOURCE LINE # 61
0030         ?C0009:
                                           ; SOURCE LINE # 62
0030 750007      R     MOV     i,#07H
0033         ?C0011:
                                           ; SOURCE LINE # 63
0033 E4                CLR     A
0034 FF                MOV     R7,A
0035 FE                MOV     R6,A
0036 FD                MOV     R5,A
0037 FC                MOV     R4,A
0038 AB00        R     MOV     R3,num+03H
003A AA00        R     MOV     R2,num+02H
003C A900        R     MOV     R1,num+01H
003E A800        R     MOV     R0,num
0040 C3                CLR     C
0041 120000      E     LCALL   ?C?ULCMP
0044 603B              JZ      ?C0010
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
0046 E4                CLR     A
0047 7B0A              MOV     R3,#0AH
0049 FA                MOV     R2,A
004A F9                MOV     R1,A
004B F8                MOV     R0,A
004C AF00        R     MOV     R7,num+03H
004E AE00        R     MOV     R6,num+02H
0050 AD00        R     MOV     R5,num+01H
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2025 14:13:23 PAGE 6   

0052 AC00        R     MOV     R4,num
0054 120000      E     LCALL   ?C?ULDIV
0057 7400        R     MOV     A,#LOW digtal_codes
0059 2B                ADD     A,R3
005A F8                MOV     R0,A
005B E6                MOV     A,@R0
005C FF                MOV     R7,A
005D 7400        R     MOV     A,#LOW buff
005F 2500        R     ADD     A,i
0061 F8                MOV     R0,A
0062 A607              MOV     @R0,AR7
                                           ; SOURCE LINE # 66
0064 AF00        R     MOV     R7,num+03H
0066 AE00        R     MOV     R6,num+02H
0068 AD00        R     MOV     R5,num+01H
006A AC00        R     MOV     R4,num
006C E4                CLR     A
006D 7B0A              MOV     R3,#0AH
006F FA                MOV     R2,A
0070 F9                MOV     R1,A
0071 F8                MOV     R0,A
0072 120000      E     LCALL   ?C?ULDIV
0075 8F00        R     MOV     num+03H,R7
0077 8E00        R     MOV     num+02H,R6
0079 8D00        R     MOV     num+01H,R5
007B 8C00        R     MOV     num,R4
                                           ; SOURCE LINE # 67
007D 1500        R     DEC     i
                                           ; SOURCE LINE # 68
007F 80B2              SJMP    ?C0011
                                           ; SOURCE LINE # 69
0081         ?C0010:
0081 22                RET     
             ; FUNCTION _SetCache (END)

             ; FUNCTION FlushDigtal (BEGIN)
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 74
;---- Variable 'i' assigned to Register 'R6' ----
0000 E4                CLR     A
0001 FE                MOV     R6,A
0002         ?C0013:
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
0002 AF06              MOV     R7,AR6
0004 7400        R     MOV     A,#LOW buff
0006 2E                ADD     A,R6
0007 F8                MOV     R0,A
0008 E6                MOV     A,@R0
0009 FD                MOV     R5,A
000A 120000      R     LCALL   _DisplaySingle
                                           ; SOURCE LINE # 77
000D 0E                INC     R6
000E BE08F1            CJNE    R6,#08H,?C0013
                                           ; SOURCE LINE # 78
0011         ?C0016:
0011 22                RET     
             ; FUNCTION FlushDigtal (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 80
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2025 14:13:23 PAGE 7   

                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 83
0000 C2B6              CLR     P36
                                           ; SOURCE LINE # 84
0002 C2B4              CLR     P34
                                           ; SOURCE LINE # 85
0004 7F39              MOV     R7,#039H
0006 7E30              MOV     R6,#030H
0008 7D00              MOV     R5,#00H
000A 7C00              MOV     R4,#00H
000C 120000      R     LCALL   _SetCache
000F         ?C0017:
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 87
                                           ; SOURCE LINE # 88
000F 120000      R     LCALL   FlushDigtal
                                           ; SOURCE LINE # 89
0012 80FB              SJMP    ?C0017
             ; FUNCTION main (END)

C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2025 14:13:23 PAGE 8   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
XICON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
P4 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
_SetCache. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  num. . . . . . . . . . . . . . . . .  AUTO     DATA   U_LONG   0000H  4
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0004H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
ISP_TRIG . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E6H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
EC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AEH  1
FE . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
ISP_CMD. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E5H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
buff . . . . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0000H  8
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
_ShowDigtalNum . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  num. . . . . . . . . . . . . . . . .  AUTO     DATA   U_LONG   0000H  4
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0004H  1
  j. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0005H  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
P00. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0080H  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
P10. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
P01. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0081H  1
P20. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
P11. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
P02. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0082H  1
ISP_ADDRH. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E3H  1
P30. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
P21. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A1H  1
P12. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0092H  1
P03. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0083H  1
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2025 14:13:23 PAGE 9   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
P31. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
P22. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A2H  1
P13. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0093H  1
P04. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0084H  1
P40. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E8H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
P32. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
P23. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A3H  1
P14. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0094H  1
P05. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0085H  1
P41. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E9H  1
P33. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
P24. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A4H  1
P15. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0095H  1
P06. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0086H  1
ISP_ADDRL. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E4H  1
P42. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EAH  1
P34. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
P25. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
P16. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0096H  1
P07. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0087H  1
P43. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EBH  1
P35. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
P26. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A6H  1
P17. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0097H  1
P44. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ECH  1
P36. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
P27. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
P45. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EDH  1
P37. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
P46. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EEH  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
_DisplaySingle . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  n. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  num. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
AUXR . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008EH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
C51 COMPILER V9.60.7.0   MAIN                                                              04/17/2025 14:13:23 PAGE 10  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
ISP_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E7H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
WDT_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E1H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
FlushDigtal. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
IPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B7H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2MOD. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C9H  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
ISP_DATA . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E2H  1
digtal_codes . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0008H  10
SADEN. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B9H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
SADDR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A9H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
AUXR1. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A2H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
F1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D1H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    308    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
