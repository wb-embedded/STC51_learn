C51 COMPILER V9.60.7.0   INT_KEY                                                           04/21/2025 21:39:55 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE INT_KEY
OBJECT MODULE PLACED IN .\build\Release\.obj\src\Int\Int_Key.o
COMPILER INVOKED BY: E:\Program Files\Keil_v5\C51\BIN\C51.exe .\src\Int\Int_Key.c OMF2 TABS(4) CODE NOCOND SYMBOLS PRINT
                    -(.\build\Release\.obj\src\Int\Int_Key.lst) INCDIR(../../../Program Files/Keil_v5/C51/INC;src;src/Dri;src/Int) DEFINE(__U
                    -VISION_VERSION=526) OPTIMIZE(8,SPEED) SMALL ROM(LARGE) OBJECT(.\build\Release\.obj\src\Int\Int_Key.o)

line level    source

   1          #include "Int_Key.h"
   2          
   3          static unsigned char s_sw1_status, s_sw2_status, s_sw3_status, s_sw4_status;
   4          static unsigned char s_sw1_before_status, s_sw2_before_status, s_sw3_before_status, s_sw4_before_status;
   5          
   6          static void Int_Key_CallbackFunc()
   7          {
   8   1          s_sw1_status <<= 1;
   9   1          s_sw1_status |= P42;
  10   1      
  11   1          s_sw2_status <<= 1;
  12   1          s_sw2_status |= P43;
  13   1      
  14   1          s_sw3_status <<= 1;
  15   1          s_sw3_status |= P32;
  16   1      
  17   1          s_sw4_status <<= 1;
  18   1          s_sw4_status |= P33;
  19   1      }
  20          
  21          // 1表示按下，2表示抬起，0表示与之前状态一致
  22          void Int_Key_Init()
  23          {
  24   1          s_sw1_status = 0xFF;
  25   1          s_sw2_status = 0xFF;
  26   1          s_sw3_status = 0xFF;
  27   1          s_sw4_status = 0xFF;
  28   1      
  29   1          s_sw1_before_status = 2;
  30   1          s_sw2_before_status = 2;
  31   1          s_sw3_before_status = 2;
  32   1          s_sw4_before_status = 2;
  33   1      
  34   1          Dri_Timer0_RegisterCallbackFunc(Int_Key_CallbackFunc);
  35   1      }
  36          
  37          // 1表示按下，2表示抬起，0表示与之前状态一致
  38          unsigned char Int_Key_GetSw1Status()
  39          {
  40   1          if (s_sw1_before_status == 2 && s_sw1_status == 0x00) {
  41   2              s_sw1_before_status = 1;
  42   2              return 1;
  43   2          }
  44   1          if (s_sw1_before_status == 1 && s_sw1_status == 0xFF) {
  45   2              s_sw1_before_status = 2;
  46   2              return 2;
  47   2          }
  48   1          return 0;
  49   1      }
  50          
  51          unsigned char Int_Key_GetSw2Status()
  52          {
  53   1          if (s_sw2_before_status == 2 && s_sw2_status == 0x00) {
C51 COMPILER V9.60.7.0   INT_KEY                                                           04/21/2025 21:39:55 PAGE 2   

  54   2              s_sw2_before_status = 1;
  55   2              return 1;
  56   2          }
  57   1          if (s_sw2_before_status == 1 && s_sw2_status == 0xFF) {
  58   2              s_sw2_before_status = 2;
  59   2              return 2;
  60   2          }
  61   1          return 0;
  62   1      }
  63          
  64          unsigned char Int_Key_GetSw3Status()
  65          {
  66   1          if (s_sw3_before_status == 2 && s_sw3_status == 0x00) {
  67   2              s_sw3_before_status = 1;
  68   2              return 1;
  69   2          }
  70   1          if (s_sw3_before_status == 1 && s_sw3_status == 0xFF) {
  71   2              s_sw3_before_status = 2;
  72   2              return 2;
  73   2          }
  74   1          return 0;
  75   1      }
  76          
  77          unsigned char Int_Key_GetSw4Status()
  78          {
  79   1          if (s_sw4_before_status == 2 && s_sw4_status == 0x00) {
  80   2              s_sw4_before_status = 1;
  81   2              return 1;
  82   2          }
  83   1          if (s_sw4_before_status == 1 && s_sw4_status == 0xFF) {
  84   2              s_sw4_before_status = 2;
  85   2              return 2;
  86   2          }
  87   1          return 0;
  88   1      }
C51 COMPILER V9.60.7.0   INT_KEY                                                           04/21/2025 21:39:55 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Int_Key_CallbackFunc (BEGIN)
                                           ; SOURCE LINE # 6
                                           ; SOURCE LINE # 7
                                           ; SOURCE LINE # 8
0000 E500        R     MOV     A,s_sw1_status
0002 25E0              ADD     A,ACC
0004 F500        R     MOV     s_sw1_status,A
                                           ; SOURCE LINE # 9
0006 A2EA              MOV     C,P42
0008 E4                CLR     A
0009 33                RLC     A
000A 4200        R     ORL     s_sw1_status,A
                                           ; SOURCE LINE # 11
000C E500        R     MOV     A,s_sw2_status
000E 25E0              ADD     A,ACC
0010 F500        R     MOV     s_sw2_status,A
                                           ; SOURCE LINE # 12
0012 A2EB              MOV     C,P43
0014 E4                CLR     A
0015 33                RLC     A
0016 4200        R     ORL     s_sw2_status,A
                                           ; SOURCE LINE # 14
0018 E500        R     MOV     A,s_sw3_status
001A 25E0              ADD     A,ACC
001C F500        R     MOV     s_sw3_status,A
                                           ; SOURCE LINE # 15
001E A2B2              MOV     C,P32
0020 E4                CLR     A
0021 33                RLC     A
0022 4200        R     ORL     s_sw3_status,A
                                           ; SOURCE LINE # 17
0024 E500        R     MOV     A,s_sw4_status
0026 25E0              ADD     A,ACC
0028 F500        R     MOV     s_sw4_status,A
                                           ; SOURCE LINE # 18
002A A2B3              MOV     C,P33
002C E4                CLR     A
002D 33                RLC     A
002E 4200        R     ORL     s_sw4_status,A
                                           ; SOURCE LINE # 19
0030 22                RET     
             ; FUNCTION Int_Key_CallbackFunc (END)

             ; FUNCTION Int_Key_Init (BEGIN)
                                           ; SOURCE LINE # 22
                                           ; SOURCE LINE # 23
                                           ; SOURCE LINE # 24
0000 7500FF      R     MOV     s_sw1_status,#0FFH
                                           ; SOURCE LINE # 25
0003 7500FF      R     MOV     s_sw2_status,#0FFH
                                           ; SOURCE LINE # 26
0006 7500FF      R     MOV     s_sw3_status,#0FFH
                                           ; SOURCE LINE # 27
0009 7500FF      R     MOV     s_sw4_status,#0FFH
                                           ; SOURCE LINE # 29
000C 750002      R     MOV     s_sw1_before_status,#02H
                                           ; SOURCE LINE # 30
000F 750002      R     MOV     s_sw2_before_status,#02H
                                           ; SOURCE LINE # 31
C51 COMPILER V9.60.7.0   INT_KEY                                                           04/21/2025 21:39:55 PAGE 4   

0012 750002      R     MOV     s_sw3_before_status,#02H
                                           ; SOURCE LINE # 32
0015 750002      R     MOV     s_sw4_before_status,#02H
                                           ; SOURCE LINE # 34
0018 7BFF              MOV     R3,#0FFH
001A 7A00        R     MOV     R2,#HIGH Int_Key_CallbackFunc
001C 7900        R     MOV     R1,#LOW Int_Key_CallbackFunc
001E 020000      E     LJMP    _Dri_Timer0_RegisterCallbackFunc
             ; FUNCTION Int_Key_Init (END)

             ; FUNCTION Int_Key_GetSw1Status (BEGIN)
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 40
0000 E500        R     MOV     A,s_sw1_before_status
0002 B4020A            CJNE    A,#02H,?C0003
0005 E500        R     MOV     A,s_sw1_status
0007 7006              JNZ     ?C0003
                                           ; SOURCE LINE # 41
0009 750001      R     MOV     s_sw1_before_status,#01H
                                           ; SOURCE LINE # 42
000C 7F01              MOV     R7,#01H
000E 22                RET     
                                           ; SOURCE LINE # 43
000F         ?C0003:
                                           ; SOURCE LINE # 44
000F E500        R     MOV     A,s_sw1_before_status
0011 B4010B            CJNE    A,#01H,?C0005
0014 E500        R     MOV     A,s_sw1_status
0016 B4FF06            CJNE    A,#0FFH,?C0005
                                           ; SOURCE LINE # 45
0019 750002      R     MOV     s_sw1_before_status,#02H
                                           ; SOURCE LINE # 46
001C 7F02              MOV     R7,#02H
001E 22                RET     
                                           ; SOURCE LINE # 47
001F         ?C0005:
                                           ; SOURCE LINE # 48
001F 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 49
0021         ?C0004:
0021 22                RET     
             ; FUNCTION Int_Key_GetSw1Status (END)

             ; FUNCTION Int_Key_GetSw2Status (BEGIN)
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
0000 E500        R     MOV     A,s_sw2_before_status
0002 B4020A            CJNE    A,#02H,?C0006
0005 E500        R     MOV     A,s_sw2_status
0007 7006              JNZ     ?C0006
                                           ; SOURCE LINE # 54
0009 750001      R     MOV     s_sw2_before_status,#01H
                                           ; SOURCE LINE # 55
000C 7F01              MOV     R7,#01H
000E 22                RET     
                                           ; SOURCE LINE # 56
000F         ?C0006:
                                           ; SOURCE LINE # 57
000F E500        R     MOV     A,s_sw2_before_status
0011 B4010B            CJNE    A,#01H,?C0008
C51 COMPILER V9.60.7.0   INT_KEY                                                           04/21/2025 21:39:55 PAGE 5   

0014 E500        R     MOV     A,s_sw2_status
0016 B4FF06            CJNE    A,#0FFH,?C0008
                                           ; SOURCE LINE # 58
0019 750002      R     MOV     s_sw2_before_status,#02H
                                           ; SOURCE LINE # 59
001C 7F02              MOV     R7,#02H
001E 22                RET     
                                           ; SOURCE LINE # 60
001F         ?C0008:
                                           ; SOURCE LINE # 61
001F 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 62
0021         ?C0007:
0021 22                RET     
             ; FUNCTION Int_Key_GetSw2Status (END)

             ; FUNCTION Int_Key_GetSw3Status (BEGIN)
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 66
0000 E500        R     MOV     A,s_sw3_before_status
0002 B4020A            CJNE    A,#02H,?C0009
0005 E500        R     MOV     A,s_sw3_status
0007 7006              JNZ     ?C0009
                                           ; SOURCE LINE # 67
0009 750001      R     MOV     s_sw3_before_status,#01H
                                           ; SOURCE LINE # 68
000C 7F01              MOV     R7,#01H
000E 22                RET     
                                           ; SOURCE LINE # 69
000F         ?C0009:
                                           ; SOURCE LINE # 70
000F E500        R     MOV     A,s_sw3_before_status
0011 B4010B            CJNE    A,#01H,?C0011
0014 E500        R     MOV     A,s_sw3_status
0016 B4FF06            CJNE    A,#0FFH,?C0011
                                           ; SOURCE LINE # 71
0019 750002      R     MOV     s_sw3_before_status,#02H
                                           ; SOURCE LINE # 72
001C 7F02              MOV     R7,#02H
001E 22                RET     
                                           ; SOURCE LINE # 73
001F         ?C0011:
                                           ; SOURCE LINE # 74
001F 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 75
0021         ?C0010:
0021 22                RET     
             ; FUNCTION Int_Key_GetSw3Status (END)

             ; FUNCTION Int_Key_GetSw4Status (BEGIN)
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
                                           ; SOURCE LINE # 79
0000 E500        R     MOV     A,s_sw4_before_status
0002 B4020A            CJNE    A,#02H,?C0012
0005 E500        R     MOV     A,s_sw4_status
0007 7006              JNZ     ?C0012
                                           ; SOURCE LINE # 80
0009 750001      R     MOV     s_sw4_before_status,#01H
                                           ; SOURCE LINE # 81
000C 7F01              MOV     R7,#01H
C51 COMPILER V9.60.7.0   INT_KEY                                                           04/21/2025 21:39:55 PAGE 6   

000E 22                RET     
                                           ; SOURCE LINE # 82
000F         ?C0012:
                                           ; SOURCE LINE # 83
000F E500        R     MOV     A,s_sw4_before_status
0011 B4010B            CJNE    A,#01H,?C0014
0014 E500        R     MOV     A,s_sw4_status
0016 B4FF06            CJNE    A,#0FFH,?C0014
                                           ; SOURCE LINE # 84
0019 750002      R     MOV     s_sw4_before_status,#02H
                                           ; SOURCE LINE # 85
001C 7F02              MOV     R7,#02H
001E 22                RET     
                                           ; SOURCE LINE # 86
001F         ?C0014:
                                           ; SOURCE LINE # 87
001F 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 88
0021         ?C0013:
0021 22                RET     
             ; FUNCTION Int_Key_GetSw4Status (END)

C51 COMPILER V9.60.7.0   INT_KEY                                                           04/21/2025 21:39:55 PAGE 7   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
_Dri_Timer0_RegisterCallbackFunc . . .  EXTERN   CODE   PROC     -----  -----
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
XICON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
P4 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
ISP_TRIG . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E6H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
EC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AEH  1
FE . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
CallbackFunc . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
ISP_CMD. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E5H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
Int_Key_Init . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
P00. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0080H  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
P10. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
P01. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0081H  1
P20. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
P11. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
P02. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0082H  1
ISP_ADDRH. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E3H  1
P30. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
P21. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A1H  1
P12. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0092H  1
P03. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0083H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
P31. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
P22. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A2H  1
P13. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0093H  1
P04. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0084H  1
C51 COMPILER V9.60.7.0   INT_KEY                                                           04/21/2025 21:39:55 PAGE 8   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P40. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E8H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
P32. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
P23. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A3H  1
P14. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0094H  1
P05. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0085H  1
P41. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E9H  1
P33. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
P24. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A4H  1
P15. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0095H  1
P06. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0086H  1
ISP_ADDRL. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E4H  1
P42. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EAH  1
P34. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
P25. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
P16. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0096H  1
P07. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0087H  1
P43. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EBH  1
P35. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
P26. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A6H  1
P17. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0097H  1
P44. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ECH  1
Int_Key_CallbackFunc . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
P36. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
P27. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
P45. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EDH  1
P37. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
P46. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EEH  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
Int_Key_GetSw1Status . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
Int_Key_GetSw2Status . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
Int_Key_GetSw3Status . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
AUXR . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008EH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
Int_Key_GetSw4Status . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
s_sw1_before_status. . . . . . . . . .  STATIC   DATA   U_CHAR   0000H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
C51 COMPILER V9.60.7.0   INT_KEY                                                           04/21/2025 21:39:55 PAGE 9   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
s_sw2_before_status. . . . . . . . . .  STATIC   DATA   U_CHAR   0001H  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
s_sw3_before_status. . . . . . . . . .  STATIC   DATA   U_CHAR   0002H  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
s_sw4_before_status. . . . . . . . . .  STATIC   DATA   U_CHAR   0003H  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
ISP_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E7H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
WDT_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E1H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
IPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B7H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2MOD. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C9H  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
ISP_DATA . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E2H  1
SADEN. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B9H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
SADDR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A9H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
AUXR1. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A2H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
F1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D1H  1
s_sw1_status . . . . . . . . . . . . .  STATIC   DATA   U_CHAR   0004H  1
s_sw2_status . . . . . . . . . . . . .  STATIC   DATA   U_CHAR   0005H  1
s_sw3_status . . . . . . . . . . . . .  STATIC   DATA   U_CHAR   0006H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
s_sw4_status . . . . . . . . . . . . .  STATIC   DATA   U_CHAR   0007H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    218    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
